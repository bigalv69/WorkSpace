#%Module

proc ModulesHelp {} {
    puts stderr {    use.own - adds $HOME/privatemodules to the list of directories}
    puts stderr {    that the module command will search for modules. Place your}
    puts stderr {    own module files here. This module, when loaded, will create}
    puts stderr {    this directory if necessary.}
    puts stderr {}
}

module-whatis {adds your own modulefiles directory to MODULEPATH}

eval set [array get env HOME]
set ownmoddir $HOME/privatemodules

# create directory if necessary
if {[module-info mode load]} {
    if {![file exists $ownmoddir]} {
        file mkdir $ownmoddir
        set null [open $ownmoddir/null w]
        puts $null {#%Module}
        puts $null {}
        puts $null "proc ModulesHelp {} {"
        puts $null {    puts stderr {    null - does absolutely nothing. It is simply meant as a place}}
        puts $null {    puts stderr {    holder in your dot file initialization.}}
        puts $null {    puts stderr {}}
        puts $null "}"
        puts $null {}
        puts $null {module-whatis {does absolutely nothing}}
        close $null
    }
}

module use --append $ownmoddir
