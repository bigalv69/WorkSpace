##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2021/03/29
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		getvariant
#   Modulefiles:    variant
#   Sub-Command:
#
#   Comment:	%C{
#           Test 'getvariant' modulefile command
#		}C%
#
##############################################################################

set mp $modpath.3
set mpre $modpathre.3
setenv_path_var MODULEPATH $mp


setenv_var MODULES_ADVANCED_VERSION_SPEC 1

#
# load tests
#

setenv_var TESTSUITE_VARIANT 1
set ans [list]
lappend ans [list set __MODULES_LMVARIANT {variant/5.0&foo|val 4|0|0&bar|2|0|2&b?r ||0|0}]
lappend ans [list set TS1 {foo=val 4:bar=2:b?r =:f* o= ef*ult}]
lappend ans [list set _LMFILES_ $mp/variant/5.0]
lappend ans [list set LOADEDMODULES variant/5.0]
lappend ans [list set TS0 {foo=val 4:bar=2:b?r =:f* o=}]
testouterr_cmd_re sh {load variant/5.0 foo=val\ 4 b?r\ =} $ans {}

skip_if_quick_mode

setenv_var TESTSUITE_VARIANT 2
set ans [list]
lappend ans [list set TS1 {foo=default:bar=de *ult}]
lappend ans [list set _LMFILES_ $mp/variant/5.0]
lappend ans [list set LOADEDMODULES variant/5.0]
lappend ans [list set TS0 {foo=:bar=}]
testouterr_cmd_re sh {load variant/5.0} $ans {}

setenv_var MODULES_ADVANCED_VERSION_SPEC 0
testouterr_cmd_re sh {load variant/5.0} $ans {}
setenv_var MODULES_ADVANCED_VERSION_SPEC 1


#
# unload test
#

setenv_var TESTSUITE_VARIANT 1
setenv_loaded_module [list variant/5.0] [list $mp/variant/5.0]
setenv_var __MODULES_LMVARIANT {variant/5.0&foo|val 4|0|0&bar|2|0|2&b?r ||0|0}
setenv_path_var TS0 {foo=val 4:bar=2:b?r =:f* o=}
setenv_path_var TS1 {foo=val 4:bar=2:b?r =:f* o= ef*ult}

set ans [list]
lappend ans [list unset __MODULES_LMVARIANT]
lappend ans [list unset TS1]
lappend ans [list unset _LMFILES_]
lappend ans [list unset LOADEDMODULES]
lappend ans [list unset TS0]
testouterr_cmd sh {unload variant/5.0} $ans {}
testouterr_cmd sh {unload variant/5.0 b?r\ =} $ans {}

unsetenv_loaded_module
unsetenv_var __MODULES_LMVARIANT
unsetenv_path_var TS0
unsetenv_path_var TS1


#
# display test
#

setenv_var TESTSUITE_VARIANT 1
set tserr "$modlin
$mpre/variant/5.0:

variant\t\tfoo val1 val2 val3 {val 4}
variant\t\t--default 2 bar 1 2 3
variant\t\t{b\\?r } {} v\\*l1 val2
append-path\tTS0 foo={foo}
append-path\tTS1 foo={foo}
append-path\tTS0 bar={bar}
append-path\tTS1 bar={bar}
append-path\tTS0 {b\\?r ={b\\?r }}
append-path\tTS1 {b\\?r ={b\\?r }}
append-path\tTS0 {f\\* o={f\\* o}}
append-path\tTS1 {f\\* o={f\\* o}}
$modlin"
testouterr_cmd_re sh {display variant/5.0 foo=val1 b?r\ =} OK $tserr

# display loaded module
setenv_loaded_module [list variant/5.0] [list $mp/variant/5.0]
setenv_var __MODULES_LMVARIANT {variant/5.0&foo|val1|0|0&bar|2|0|2&b?r ||0|0}
setenv_path_var TS0 foo={foo} bar={bar} {b\\?r ={b\\?r }} {f\\* o={f\\* o}}
setenv_path_var TS1 foo={foo} bar={bar} {b\\?r ={b\\?r }} {f\\* o={f\\* o}}
testouterr_cmd_re sh {display variant/5.0 foo=val1 b?r\ =} OK $tserr
unsetenv_loaded_module
unsetenv_var __MODULES_LMVARIANT
unsetenv_path_var TS0
unsetenv_path_var TS1

# color test
setenv_var MODULES_COLOR always
setenv_var MODULES_COLORS hi=1:cm=92:va=93
set tserr "$modlin
[sgr 1]$mpre/variant/5.0[sgr 22]:

[sgr 92]variant[sgr 0]\t\tfoo val1 val2 val3 {val 4}
[sgr 92]variant[sgr 0]\t\t--default 2 bar 1 2 3
[sgr 92]variant[sgr 0]\t\t{b\\?r } {} v\\*l1 val2
[sgr 92]append-path[sgr 0]\tTS0 foo=[sgr 93]{foo}[sgr 0]
[sgr 92]append-path[sgr 0]\tTS1 foo=[sgr 93]{foo}[sgr 0]
[sgr 92]append-path[sgr 0]\tTS0 bar=[sgr 93]{bar}[sgr 0]
[sgr 92]append-path[sgr 0]\tTS1 bar=[sgr 93]{bar}[sgr 0]
[sgr 92]append-path[sgr 0]\tTS0 {b\\?r =[sgr 93]{b\\?r }[sgr 0]}
[sgr 92]append-path[sgr 0]\tTS1 {b\\?r =[sgr 93]{b\\?r }[sgr 0]}
[sgr 92]append-path[sgr 0]\tTS0 {f\\* o=[sgr 93]{f\\* o}[sgr 0]}
[sgr 92]append-path[sgr 0]\tTS1 {f\\* o=[sgr 93]{f\\* o}[sgr 0]}
$modlin"
testouterr_cmd_re sh {display variant/5.0 foo=val1 b?r\ =} OK $tserr

setenv_var MODULES_COLOR never
unsetenv_var MODULES_COLORS


#
# help test
#

set tserr "$modlin
Module Specific Help for $mpre/variant/5.0:

b\\?r =
bar=2
foo=val1
$modlin"
testouterr_cmd_re sh {help variant/5.0 foo=val1 b?r\ =} OK $tserr


#
# test test
#

set tserr "$modlin
Module Specific Test for $mpre/variant/5.0:

b\\?r =
bar=2
foo=val1
Test result: PASS
$modlin"
testouterr_cmd_re sh {test variant/5.0 foo=val1 b?r\ =} OK $tserr


#
# whatis test
#

# see 70/375


#
# --return-value test
#

set module variant/5.1
set modulefile $mp/$module
set modulefilere $mpre/$module

setenv_var TESTSUITE_GETVARIANT toomany1
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {7} : {10}}]
set tserr [escre [msg_load $module{foo=val1} [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant foo {} other<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module foo=val1" ERR $tserr

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
[escre [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant foo {} other<EXM>} $modulefile $ln {  }]]
$modlin"
testouterr_cmd_re sh "display $module foo=val1" ERR $tserr

setenv_var TESTSUITE_GETVARIANT toomany2
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {7} : {13}}]
set tserr [escre [msg_load $module{foo=val1} [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant --return-value foo {} other<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module foo=val1" ERR $tserr

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
[escre [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant --return-value foo {} other<EXM>} $modulefile $ln {  }]]
$modlin"
testouterr_cmd_re sh "display $module foo=val1" ERR $tserr

setenv_var TESTSUITE_GETVARIANT toofew1
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {7} : {16}}]
set tserr [escre [msg_load $module{foo=val1} [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module foo=val1" ERR $tserr

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
[escre [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant<EXM>} $modulefile $ln {  }]]
$modlin"
testouterr_cmd_re sh "display $module foo=val1" ERR $tserr

setenv_var TESTSUITE_GETVARIANT toofew2
set ans [list]
lappend ans [list set __MODULES_LMVARIANT {variant/5.1&foo|val1|0|0}]
lappend ans [list set _LMFILES_ $mp/variant/5.1]
lappend ans [list set LOADEDMODULES variant/5.1]
lappend ans [list set testsuite {}]
testouterr_cmd sh "load $module foo=val1" $ans {}

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
setenv\\s*testsuite {--return-value}
$modlin"
testouterr_cmd_re sh "display $module foo=val1" OK $tserr

setenv_var TESTSUITE_GETVARIANT misplaced1
set ans [list]
lappend ans [list set __MODULES_LMVARIANT {variant/5.1&foo|val1|0|0}]
lappend ans [list set _LMFILES_ $mp/variant/5.1]
lappend ans [list set LOADEDMODULES variant/5.1]
lappend ans [list set testsuite {val1}]
testouterr_cmd sh "load $module foo=val1" $ans {}

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
setenv\\s*testsuite {foo}
$modlin"
testouterr_cmd_re sh "display $module foo=val1" OK $tserr

setenv_var TESTSUITE_GETVARIANT misplaced2
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {7} : {25}}]
set tserr [escre [msg_load $module{foo=val1} [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant foo bar --return-value<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module foo=val1" ERR $tserr

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
[escre [msg_moderr {wrong # args: should be "getvariant ?--return-value? name ?valifundef?"} {getvariant foo bar --return-value<EXM>} $modulefile $ln {  }]]
$modlin"
testouterr_cmd_re sh "display $module foo=val1" ERR $tserr

setenv_var TESTSUITE_GETVARIANT return1
set ans [list]
lappend ans [list set _LMFILES_ $mp/variant/5.1]
lappend ans [list set LOADEDMODULES variant/5.1]
lappend ans [list set testsuite {bar}]
testouterr_cmd sh "load $module" $ans {}

set tserr "$modlin
$modulefilere:

setenv\\s*testsuite bar
$modlin"
testouterr_cmd_re sh "display $module" OK $tserr

setenv_var TESTSUITE_GETVARIANT return2
set ans [list]
lappend ans [list set __MODULES_LMVARIANT {variant/5.1&foo|val1|0|0}]
lappend ans [list set _LMFILES_ $mp/variant/5.1]
lappend ans [list set LOADEDMODULES variant/5.1]
lappend ans [list set testsuite val1]
testouterr_cmd sh "load $module foo=val1" $ans {}

set tserr "$modlin
$modulefilere:

variant\\s*foo\\s*val1 val2 val3
setenv\\s*testsuite val1
$modlin"
testouterr_cmd_re sh "display $module foo=val1" OK $tserr


#
#  Cleanup
#

reset_test_env
