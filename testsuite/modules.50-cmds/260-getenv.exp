##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:       modules.50-cmds/%M%
#   Revision:       %I%
#   First Edition:  2017/04/28
#   Last Mod.:      %U%, %G%
#
#   Authors:        Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:    Testuite testsequence
#   Command:        load, display
#   Modulefiles:    getenv
#   Sub-Command:
#
#   Comment:    %C{
#           Test 'getenv' sub-command
#       }C%
#
##############################################################################

# ensure auto symbolic versions are not set for these tests
setenv_var MODULES_ADVANCED_VERSION_SPEC 0

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set module "getenv/1.0"
set modulefile "$modpath/$module"
set modulefilere "$modpathre/$module"

#
#  The tests when dependent env var is not set
#

lappend ans [list set testsuite2 ""]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite {}]

# test loading
testouterr_cmd "sh" "load $module" $ans ""

# test displaying
testouterr_cmd_re "sh" "display $module" "OK" "$modlin\n$modulefilere:\n\nsetenv\t\ttestsuite \\\$TEST\nsetenv\t\ttestsuite2 \\\$TEST2\n$modlin"

skip_if_quick_mode

#
#  The tests when dependent env var is set
#

set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite yes]

# Set up the environment for test that require the module to be loaded
setenv_var TEST "yes"
setenv_var TEST2 "yes"

# test loading
testouterr_cmd "sh" "load $module" $ans ""

# test displaying
testouterr_cmd_re "sh" "display $module" "OK" "$modlin\n$modulefilere:\n\nsetenv\t\ttestsuite \\\$TEST\nsetenv\t\ttestsuite2 \\\$TEST2\n$modlin"


#
# test bad arguments
#

setenv_var TESTSUITE_GETENV toomany1
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {30} : {33}}]
set tserr [escre [msg_load $module [msg_moderr {wrong # args: should be "getenv ?--return-value? variable ?valifundef?"} {getenv TEST {} other<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module" ERR $tserr

set tserr "$modlin
$modulefilere:

setenv\\s*testsuite\\s*\\\$TEST
setenv\\s*testsuite2\\s*\\\$TEST2
[escre [msg_moderr {wrong # args: should be "getenv ?--return-value? variable ?valifundef?"} {getenv TEST {} other<EXM>} $modulefile $ln {  }]]
$modlin"
testouterr_cmd_re sh "display $module" ERR $tserr

setenv_var TESTSUITE_GETENV toomany2
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {30} : {36}}]
set tserr [escre [msg_load $module [msg_moderr {wrong # args: should be "getenv ?--return-value? variable ?valifundef?"} {getenv --return-value TEST {} other<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module" ERR $tserr

setenv_var TESTSUITE_GETENV toofew1
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {30} : {39}}]
set tserr [escre [msg_load $module [msg_moderr {wrong # args: should be "getenv ?--return-value? variable ?valifundef?"} {getenv<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module" ERR $tserr

setenv_var TESTSUITE_GETENV toofew2
set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set testsuite3 {}]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite yes]
testouterr_cmd sh "load $module" $ans {}

setenv_var TESTSUITE_GETENV misplaced1
unsetenv_var TEST
set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set testsuite3 --return-value]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite {}]
testouterr_cmd sh "load $module" $ans {}

setenv_var TESTSUITE_GETENV misplaced2
set ln [expr {[cmpversion $tclsh_version 8.5] < 1 ? {30} : {48}}]
set tserr [escre [msg_load $module [msg_moderr {wrong # args: should be "getenv ?--return-value? variable ?valifundef?"} {getenv TEST foo --return-value<EXM>} $modulefile $ln]]]
testouterr_cmd_re sh "load $module" ERR $tserr

setenv_var TESTSUITE_GETENV return1
set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set testsuite3 {}]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite {}]
testouterr_cmd sh "load $module" $ans {}

set tserr "$modlin
$modulefilere:

setenv\\s*testsuite\\s*\\\$TEST
setenv\\s*testsuite2\\s*\\\$TEST2
setenv\\s*testsuite3\\s*{}
$modlin"
testouterr_cmd_re sh "display $module" OK $tserr

setenv_var TEST bar

set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set testsuite3 bar]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite bar]
testouterr_cmd sh "load $module" $ans {}

set tserr "$modlin
$modulefilere:

setenv\\s*testsuite\\s*\\\$TEST
setenv\\s*testsuite2\\s*\\\$TEST2
setenv\\s*testsuite3\\s*bar
$modlin"
testouterr_cmd_re sh "display $module" OK $tserr

setenv_var TESTSUITE_GETENV return2
testouterr_cmd sh "load $module" $ans {}
testouterr_cmd_re sh "display $module" OK $tserr

unsetenv_var TEST

set ans [list]
lappend ans [list set testsuite2 yes]
lappend ans [list set testsuite3 foo]
lappend ans [list set _LMFILES_ $modulefile]
lappend ans [list set LOADEDMODULES $module]
lappend ans [list set testsuite {}]
testouterr_cmd sh "load $module" $ans {}

set tserr "$modlin
$modulefilere:

setenv\\s*testsuite\\s*\\\$TEST
setenv\\s*testsuite2\\s*\\\$TEST2
setenv\\s*testsuite3\\s*foo
$modlin"
testouterr_cmd_re sh "display $module" OK $tserr


#
#  Cleanup
#

reset_test_env
