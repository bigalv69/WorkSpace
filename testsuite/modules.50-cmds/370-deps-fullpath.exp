##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2020/07/29
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:        load, unload
#   Modulefiles:
#   Sub-Command:    prereq, conflict
#
#   Comment:	%C{
#           Test resolution of modulefile dependencies when module are
#           loaded with their full pathname.
#		}C%
#
##############################################################################

skip_if_quick_mode

# disable auto_handling with environment variable
setenv_var MODULES_AUTO_HANDLING 0

set mp "$modpath.deps"
set mpre "$modpathre.deps"

# setup specific environment
setenv_path_var MODULEPATH $mp

if {$plus_in_modpath && $install_advversspec eq {y}} {
    setenv_var MODULES_ADVANCED_VERSION_SPEC 0
}


# reflexive conflict
set ans [list]
lappend ans [list set __MODULES_LMCONFLICT $mp/c&c]
lappend ans [list set _LMFILES_ $mp/c]
lappend ans [list set LOADEDMODULES $mp/c]
testouterr_cmd sh "load $mp/c" $ans {}
testouterr_cmd sh "load --auto $mp/c" $ans {}

setenv_loaded_module [list c] [list $mp/c]
setenv_var __MODULES_LMCONFLICT c&c
set ans [list]
lappend ans [list set __MODULES_LMPREREQ $mp/b&c]
lappend ans [list set _LMFILES_ $mp/c:$mp/b]
lappend ans [list set LOADEDMODULES c:$mp/b]
testouterr_cmd_re sh "load $mp/b" $ans {}

setenv_loaded_module [list $mp/c] [list $mp/c]
setenv_var __MODULES_LMCONFLICT $mp/c&c
testouterr_cmd_re sh "load c" OK {}

set ans [list]
lappend ans [list unset __MODULES_LMCONFLICT]
lappend ans [list unset _LMFILES_]
lappend ans [list unset LOADEDMODULES]
testouterr_cmd_re sh "unload c" $ans {}
testouterr_cmd_re sh "unload $mp/c" $ans {}
testouterr_cmd_re sh "unload --auto c" $ans {}
testouterr_cmd_re sh "unload --auto $mp/c" $ans {}

# requirement
setenv_loaded_module [list $mp/c] [list $mp/c]
setenv_var __MODULES_LMCONFLICT $mp/c&c
set ans [list]
lappend ans [list set __MODULES_LMPREREQ b&c]
lappend ans [list set _LMFILES_ $mp/c:$mp/b]
lappend ans [list set LOADEDMODULES $mp/c:b]
testouterr_cmd_re sh "load b" $ans {}
testouterr_cmd_re sh "load --auto b" $ans {}
set ans [list]
lappend ans [list set __MODULES_LMPREREQ $mp/b&c]
lappend ans [list set _LMFILES_ $mp/c:$mp/b]
lappend ans [list set LOADEDMODULES $mp/c:$mp/b]
testouterr_cmd_re sh "load $mp/b" $ans {}
testouterr_cmd_re sh "load --auto $mp/b" $ans {}

# conflict
setenv_loaded_module [list $mp/c:$mp/b] [list $mp/c:$mp/b]
setenv_var __MODULES_LMCONFLICT $mp/c&c
setenv_var __MODULES_LMPREREQ $mp/b&c
testouterr_cmd sh "load a" ERR [msg_load a [err_conflict b]]
testouterr_cmd sh "load --auto a" ERR [msg_load a [err_conflict b]]
testouterr_cmd sh "load $mp/a" ERR [msg_load $mp/a [err_conflict b]]
testouterr_cmd sh "load --auto $mp/a" ERR [msg_load $mp/a [err_conflict b]]

# force conflict
set ans [list]
lappend ans [list set __MODULES_LMCONFLICT $mp/c&c:a&b]
lappend ans [list set _LMFILES_ $mp/c:$mp/b:$mp/a]
lappend ans [list set LOADEDMODULES $mp/c:$mp/b:a]
testouterr_cmd_re sh "load --force a" $ans [msg_load a [err_conlof b]]
testouterr_cmd_re sh "load --auto --force a" $ans [msg_load a [err_conlof b]]
set ans [list]
lappend ans [list set __MODULES_LMCONFLICT $mp/c&c:$mp/a&b]
lappend ans [list set _LMFILES_ $mp/c:$mp/b:$mp/a]
lappend ans [list set LOADEDMODULES $mp/c:$mp/b:$mp/a]
testouterr_cmd_re sh "load --force $mp/a" $ans [msg_load $mpre/a [err_conlof b]]
testouterr_cmd_re sh "load --auto --force $mp/a" $ans [msg_load $mpre/a [err_conlof b]]


#
#  Cleanup
#

reset_test_env
